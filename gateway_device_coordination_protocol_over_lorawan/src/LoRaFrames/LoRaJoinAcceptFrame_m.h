//
// Generated file, do not edit! Created by nedtool 6.0 from src/LoRaFrames/LoRaJoinAcceptFrame.msg.
//

#ifndef __LORAJOINACCEPTFRAME_M_H
#define __LORAJOINACCEPTFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class LoRaJoinAcceptFrame;
/**
 * Class generated from <tt>src/LoRaFrames/LoRaJoinAcceptFrame.msg:1</tt> by nedtool.
 * <pre>
 * packet LoRaJoinAcceptFrame
 * {
 *     uint32_t joinNonce;   // Actually it is of 3 bytes
 *     uint8_t netID[3];
 *     uint8_t devAddr[4];
 *     uint8_t DLSettings;
 *     uint8_t RXDelay;
 *     uint8_t CFList[16];
 * }
 * </pre>
 */
class LoRaJoinAcceptFrame : public ::omnetpp::cPacket
{
  protected:
    uint32_t joinNonce = 0;
    uint8_t netID[3] = {0};
    uint8_t devAddr[4] = {0};
    uint8_t DLSettings = 0;
    uint8_t RXDelay = 0;
    uint8_t CFList[16] = {0};

  private:
    void copy(const LoRaJoinAcceptFrame& other);

  protected:
    bool operator==(const LoRaJoinAcceptFrame&) = delete;

  public:
    LoRaJoinAcceptFrame(const char *name=nullptr, short kind=0);
    LoRaJoinAcceptFrame(const LoRaJoinAcceptFrame& other);
    virtual ~LoRaJoinAcceptFrame();
    LoRaJoinAcceptFrame& operator=(const LoRaJoinAcceptFrame& other);
    virtual LoRaJoinAcceptFrame *dup() const override {return new LoRaJoinAcceptFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint32_t getJoinNonce() const;
    virtual void setJoinNonce(uint32_t joinNonce);
    virtual size_t getNetIDArraySize() const;
    virtual uint8_t getNetID(size_t k) const;
    virtual void setNetID(size_t k, uint8_t netID);
    virtual size_t getDevAddrArraySize() const;
    virtual uint8_t getDevAddr(size_t k) const;
    virtual void setDevAddr(size_t k, uint8_t devAddr);
    virtual uint8_t getDLSettings() const;
    virtual void setDLSettings(uint8_t DLSettings);
    virtual uint8_t getRXDelay() const;
    virtual void setRXDelay(uint8_t RXDelay);
    virtual size_t getCFListArraySize() const;
    virtual uint8_t getCFList(size_t k) const;
    virtual void setCFList(size_t k, uint8_t CFList);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LoRaJoinAcceptFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LoRaJoinAcceptFrame& obj) {obj.parsimUnpack(b);}

#endif // ifndef __LORAJOINACCEPTFRAME_M_H

