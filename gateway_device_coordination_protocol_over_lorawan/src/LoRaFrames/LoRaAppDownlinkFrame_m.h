//
// Generated file, do not edit! Created by nedtool 6.0 from src/LoRaFrames/LoRaAppDownlinkFrame.msg.
//

#ifndef __LORAAPPDOWNLINKFRAME_M_H
#define __LORAAPPDOWNLINKFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



struct LoRaControlDownlink;
class LoRaAppDownlinkFrame;
/**
 * Struct generated from src/LoRaFrames/LoRaAppDownlinkFrame.msg:1 by nedtool.
 */
struct LoRaControlDownlink
{
    LoRaControlDownlink();
    bool FOptsLen[4];
    bool FPending = false;
    bool ACK = false;
    bool RFU = false;
    bool ADR = false;
};

// helpers for local use
void __doPacking(omnetpp::cCommBuffer *b, const LoRaControlDownlink& a);
void __doUnpacking(omnetpp::cCommBuffer *b, LoRaControlDownlink& a);

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LoRaControlDownlink& obj) { __doPacking(b, obj); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LoRaControlDownlink& obj) { __doUnpacking(b, obj); }

/**
 * Class generated from <tt>src/LoRaFrames/LoRaAppDownlinkFrame.msg:14</tt> by nedtool.
 * <pre>
 * packet LoRaAppDownlinkFrame
 * {
 *     uint8_t deviceAddress[4];
 *     LoRaControlDownlink control;
 *     uint16_t counter;
 *     uint8_t port;
 *     uint8_t payload[11]; // based on data rate and region specs (min 11 bytes)
 * }
 * </pre>
 */
class LoRaAppDownlinkFrame : public ::omnetpp::cPacket
{
  protected:
    uint8_t deviceAddress[4] = {0};
    LoRaControlDownlink control;
    uint16_t counter = 0;
    uint8_t port = 0;
    uint8_t payload[11] = {0};

  private:
    void copy(const LoRaAppDownlinkFrame& other);

  protected:
    bool operator==(const LoRaAppDownlinkFrame&) = delete;

  public:
    LoRaAppDownlinkFrame(const char *name=nullptr, short kind=0);
    LoRaAppDownlinkFrame(const LoRaAppDownlinkFrame& other);
    virtual ~LoRaAppDownlinkFrame();
    LoRaAppDownlinkFrame& operator=(const LoRaAppDownlinkFrame& other);
    virtual LoRaAppDownlinkFrame *dup() const override {return new LoRaAppDownlinkFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual size_t getDeviceAddressArraySize() const;
    virtual uint8_t getDeviceAddress(size_t k) const;
    virtual void setDeviceAddress(size_t k, uint8_t deviceAddress);
    virtual const LoRaControlDownlink& getControl() const;
    virtual LoRaControlDownlink& getControlForUpdate() { return const_cast<LoRaControlDownlink&>(const_cast<LoRaAppDownlinkFrame*>(this)->getControl());}
    virtual void setControl(const LoRaControlDownlink& control);
    virtual uint16_t getCounter() const;
    virtual void setCounter(uint16_t counter);
    virtual uint8_t getPort() const;
    virtual void setPort(uint8_t port);
    virtual size_t getPayloadArraySize() const;
    virtual uint8_t getPayload(size_t k) const;
    virtual void setPayload(size_t k, uint8_t payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LoRaAppDownlinkFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LoRaAppDownlinkFrame& obj) {obj.parsimUnpack(b);}

#endif // ifndef __LORAAPPDOWNLINKFRAME_M_H

